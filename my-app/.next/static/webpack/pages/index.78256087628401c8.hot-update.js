"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _components_userContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/userContext */ \"./components/userContext.js\");\n/* harmony import */ var semantic_ui_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! semantic-ui-react */ \"./node_modules/semantic-ui-react/dist/es/index.js\");\n/* harmony import */ var semantic_ui_css_semantic_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! semantic-ui-css/semantic.min.css */ \"./node_modules/semantic-ui-css/semantic.min.css\");\n/* harmony import */ var semantic_ui_css_semantic_min_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(semantic_ui_css_semantic_min_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utils_CertifyDoc_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/CertifyDoc.json */ \"./utils/CertifyDoc.json\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _portis_web3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @portis/web3 */ \"./node_modules/@portis/web3/umd/index.js\");\n/* harmony import */ var _portis_web3__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_portis_web3__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _walletconnect_web3_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/web3-provider */ \"./node_modules/@walletconnect/web3-provider/dist/esm/index.js\");\n/* harmony import */ var authereum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! authereum */ \"./node_modules/authereum/dist/index.js\");\n/* harmony import */ var authereum__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(authereum__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var fortmatic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! fortmatic */ \"./node_modules/fortmatic/dist/cjs/fortmatic.js\");\n/* harmony import */ var fortmatic__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(fortmatic__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../constants */ \"./constants.js\");\n/* harmony import */ var _components_navBar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/navBar */ \"./components/navBar.js\");\n/* harmony import */ var _components_Messages__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../components/Messages */ \"./components/Messages.js\");\n/* harmony import */ var _components_FrontPage__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../components/FrontPage */ \"./components/FrontPage.js\");\n/* harmony import */ var _components_AboutPage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../components/AboutPage */ \"./components/AboutPage.js\");\n/* harmony import */ var _components_CheckCertificates__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../components/CheckCertificates */ \"./components/CheckCertificates.js\");\n/* harmony import */ var _components_RenderCertificate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../components/RenderCertificate */ \"./components/RenderCertificate.js\");\n/* harmony import */ var _components_IssueCertificate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../components/IssueCertificate */ \"./components/IssueCertificate.js\");\n/*\nThis is a simple utility that lets users issue and check certificates of authenticity for offline documents. \nImportant functional characteristics of the dapp: \nUsers can use the app - in read-only mode - without having an ethereum wallet installed. \nIf they wish to issue a certificate, they are introduced to MetaMask, \nIncluding a link and explanation. \nIt does not use all functionalities of the solidity contract yet. \n\nplease note: cc\nI built the app while learning solidity and js. It is an personal educational project.  \nFor an extensive explanation of the app and its aims, see the readme file and about section in the app\n*/ // importing dependencies. \n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n// importing components. \n\n\n\n\n\n\n\n// Setup\nfunction Home() {\n    _s();\n    // PART 0: setting all state and ref constants of the page. \n    // the contract address\n    const contractAddress = \"0xB4AfD5AA80a7D8e01BF3e7F3C8E3917a1De3790f\";\n    // abi of the solidity contract. \n    const abi = _utils_CertifyDoc_json__WEBPACK_IMPORTED_MODULE_4__.abi;\n    // key to alchemy api thta provides access to lockchain in case MetaMask is not installed.  \n    const apiKey = \"CBr2qzLP-lXUxJFiPwPZvLJIGrv-mMt-\";\n    // keeps track of what tab is selected. \n    const [tab, setTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Home\");\n    // used to define a component height relevant to screen height of browser window (only done at startup).  \n    const [heightComponent, setHeightComponent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Home\");\n    // keeps track if app is loading (most often waiting for blockchain interaction) \n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    // keeps track of meesaging to users. Both error and success messages.  \n    const [message, setMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"invisible\");\n    // keeps track if a wallet has been connected to the app, and if so - what address.  \n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // keeps track if a wallet has been connected to the app, and if so - what address.  \n    const [walletConnected, setWalletConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // keeps track if a wallet has a linked Ethereum Name.  \n    const [ensName, setEnsName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // array to store user input. \n    const [userInput, setUserInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // array to save processed certificates returned from contract.\n    const [certificatesArray, setCertificatesArray] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // See loading web3modal below. \n    const web3ModalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    /* \nThe following are functions to interact with ethereum contract. \n*/ // @dev: calls on the Web3Provider reference to create a new instance.\n    // It returns signer, ethaddress, and (if available) ens name  \n    const getSigner = async ()=>{\n        try {\n            const provider = await web3ModalRef.current.connect();\n            let web3Provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.Web3Provider(provider);\n            const { chainId  } = await web3Provider.getNetwork();\n            if (chainId !== 5) {\n                setMessage(\"wrongNetwork\");\n                setWalletAddress(\"wrongNetwork\");\n            }\n            web3Provider.on(\"chainChanged\", (chainId)=>{\n                console.log(\"chain changed to \".concat(chainId, \"! updating providers\"));\n                web3Provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.Web3Provider(provider);\n            });\n            const signer = web3Provider.getSigner();\n            const ethAddress = await signer.getAddress();\n            const ens = await web3Provider.lookupAddress(ethAddress);\n            setWalletConnected(true);\n            setWalletAddress(ethAddress);\n            if (ens) {\n                setEnsName(ens);\n            }\n            ;\n            return {\n                web3Provider,\n                signer,\n                ethAddress,\n                ens\n            };\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    // @dev: Connects to web3Provider.\n    const connectWallet = async ()=>{\n        await getSigner();\n    };\n    // @dev: Disconnects web3Provider.\n    const disconnectWallet = async ()=>{\n        await web3ModalRef.current.clearCachedProvider();\n        console.log(\"disconnectWallet called.\");\n        if (web3ModalRef.current && web3ModalRef.current.provider && typeof web3ModalRef.current.provider.disconnect == \"function\") {\n            await web3ModalRef.current.provider.disconnect();\n        }\n        setTimeout(()=>{\n            window.location.reload();\n        }, 1);\n    };\n    //  const loadWeb3Modal = useCallback(async () => {\n    //   const provider = await web3Modal.connect();\n    //   setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    // //   provider.on(\"chainChanged\", chainId => {\n    // //     console.log(`chain changed to ${chainId}! updating providers`);\n    // //     setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    // //   });\n    // //   // Subscribe to session disconnection\n    // //   provider.on(\"disconnect\", (code, reason) => {\n    // //     console.log(code, reason);\n    // //     logoutOfWeb3Modal();\n    // //   });\n    //  }, [setInjectedProvider]); \n    // Changing network (on click button) To be Implemented. \n    // For now, this throws an error.. \n    // const changeNetwork = async () => {\n    //   try {\n    //       const { ethereum } = window;\n    //       ethereum.request({\n    //         method: \"wallet_addEthereumChain\",\n    //         params: [{\n    //             chainId: \"0x5\",\n    //             rpcUrls: [\"https://eth-goerli.g.alchemy.com/v2/\"],\n    //             chainName: \"Goerli Test Network\",\n    //             nativeCurrency: {\n    //                 name: \"GoerliETH\",\n    //                 symbol: \"GoerliETH\",\n    //                 decimals: 18\n    //             },\n    //             blockExplorerUrls: [\"https://goerli.etherscan.io\"]\n    //         }]\n    //     });\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // }\n    // issuing a new certificate. Signer is required. \n    const certify = async (userInput)=>{\n        setLoading(\"upload\");\n        try {\n            const { ethereum  } = window;\n            if (ethereum) {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.Web3Provider(ethereum, \"any\");\n                const signer = provider.getSigner();\n                const dcContract = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.Contract(contractAddress, abi, signer);\n                let tx = await dcContract.certify(userInput[0], userInput[1], userInput[2]);\n                setMessage(\"uploadInProgress\");\n                // console.log(tx.hash) \n                await tx.wait();\n                setMessage(\"uploadSuccessful\");\n            } else {\n                setMessage(\"errorUpload\");\n            }\n        } catch (err) {\n            setMessage(\"errorUpload\");\n            console.error(err.message);\n        }\n        setLoading(null);\n    };\n    // Revoke a certificate. Signer required. \n    const revokeCertificate = async (index)=>{\n        setLoading(index);\n        try {\n            const { ethereum  } = window;\n            if (ethereum) {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.Web3Provider(ethereum, \"any\");\n                const signer = provider.getSigner();\n                const dcContract = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.Contract(contractAddress, abi, signer);\n                let tx = await dcContract.revokeCertificate(index);\n                setMessage(\"revokeInProgress\");\n                await tx.wait();\n            }\n        } catch (err) {\n            console.error(err.message);\n        }\n        setMessage(\"revokeSuccessful\");\n        setLoading(null);\n    };\n    /* \n  * Note that the following functions are read only. Only a provider is required. \n  * When a signer is not required, we do NOT call the MetaMask web3provider. \n  * Instead, access is provided through alchemy API which is accesible to every user.\n  */ // Checking certificates by docHash. Returns an array of indexes. Signer not required. \n    const checkDocHash = async (userInput)=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.AlchemyProvider(5, apiKey);\n            const dcContract = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.Contract(contractAddress, abi, provider);\n            const certificateIndex = await dcContract.checkDocHash(userInput);\n            return certificateIndex;\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n    // Checking certificates by address of issuer. Returns an array of indexes.  Signer not required.\n    const checkIssuer = async (userInput)=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.AlchemyProvider(5, apiKey);\n            const dcContract = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.Contract(contractAddress, abi, provider);\n            const certificateIndex = await dcContract.checkIssuer(userInput);\n            return certificateIndex;\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n    // Checking certificates by address of recipient. Returns an array of indexes.  Signer not required.\n    const checkRecipient = async (userInput)=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.AlchemyProvider(5, apiKey);\n            const dcContract = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.Contract(contractAddress, abi, provider);\n            const certificateIndex = await dcContract.checkRecipient(userInput);\n            return certificateIndex;\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n    // Takes an array of indexes, and calls each certificate. No signer required.\n    const callCertificate = async (index)=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.providers.AlchemyProvider(5, apiKey);\n            const dcContract = new ethers__WEBPACK_IMPORTED_MODULE_18__.ethers.Contract(contractAddress, abi, provider);\n            const data = await dcContract.callCertificate(parseInt(index));\n            const dateTimeObj = new Date(parseInt(data[4] * 1000));\n            const issuerEns = await provider.lookupAddress(data[1]);\n            const recipientEns = await provider.lookupAddress(data[2]);\n            const certificate = {\n                id: index,\n                docHash: data[0],\n                issuer: data[1],\n                issuerEns: issuerEns,\n                recipient: data[2],\n                recipientEns: recipientEns,\n                description: data[3],\n                dateTime: new Intl.DateTimeFormat(\"en-GB\", {\n                    dateStyle: \"full\"\n                }).format(dateTimeObj)\n            };\n            return certificate;\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n    // Passes user input to the requested (read only) function, based on the selected tab. \n    // All these functions return index of certificates \n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        setLoading(\"loading\");\n        let certificates = [];\n        let data = [];\n        if (tab == \"Issued_Certs\") {\n            data = await checkIssuer(userInput);\n        }\n        if (tab == \"Received_Certs\") {\n            data = await checkRecipient(userInput);\n        }\n        if (tab == \"DocHash_Certs\") {\n            data = await checkDocHash(userInput);\n        }\n        // Note that the following mapping does NOT work. \n        // data.map(async (item) => {\n        //     let _certificate = await callCertificate( parseInt(item) )\n        //     certificates.concat(_certificate)\n        // })\n        // calls data of each certificate, based on index received from previous call. \n        try {\n            if (data.length === 0) {\n                certificates.push({\n                    id: 0,\n                    description: \"empty\"\n                });\n            }\n            for(let i = 0; i < data.length; i++){\n                // console.log(data)\n                certificates.push(await callCertificate(parseInt(data[i])));\n            }\n        } catch (err) {\n            setMessage(\"invalidUserInput\");\n        }\n        setCertificatesArray(certificates);\n        setLoading(null);\n        setUserInput(\"\");\n    };\n    /* \n  * What follows are the useEffect calls: changing state according to some change in another state. \n  */ // at startup calls checks if wallet is connected, sets a background image and sets dynamic height for component. \n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // getProvider();\n        setMessage(\"warningTestApp\");\n        // isWalletConnected()\n        document.body.style.backgroundImage = \"conic-gradient(from 90deg at 10% 15%, CornflowerBlue, fuchsia, salmon, CornflowerBlue)\";\n        setHeightComponent(\"\".concat(Math.round(document.documentElement.clientWidth * .38), \"px\"));\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Assign the Web3Modal class to the reference object by setting it's `current` value\n        // The `current` value is persisted throughout as long as this page is open\n        web3ModalRef.current = new (web3modal__WEBPACK_IMPORTED_MODULE_5___default())({\n            //   network: \"goerli\",\n            //   providerOptions: {},\n            //   disableInjectedProvider: false,\n            // });\n            // network: \"goerli\", \n            cacheProvider: false,\n            disableInjectedProvider: false,\n            theme: \"light\",\n            providerOptions: {\n                walletconnect: {\n                    package: _walletconnect_web3_provider__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n                    options: {\n                        bridge: \"https://polygon.bridge.walletconnect.org\",\n                        infuraId: _constants__WEBPACK_IMPORTED_MODULE_10__.INFURA_ID,\n                        rpc: {\n                            1: \"https://mainnet.infura.io/v3/\".concat(_constants__WEBPACK_IMPORTED_MODULE_10__.INFURA_ID),\n                            42: \"https://kovan.infura.io/v3/\".concat(_constants__WEBPACK_IMPORTED_MODULE_10__.INFURA_ID),\n                            100: \"https://dai.poa.network\"\n                        }\n                    }\n                },\n                fortmatic: {\n                    package: (fortmatic__WEBPACK_IMPORTED_MODULE_9___default()),\n                    options: {\n                        key: \"pk_live_5A7C91B2FC585A17\"\n                    }\n                },\n                authereum: {\n                    package: (authereum__WEBPACK_IMPORTED_MODULE_8___default())\n                }\n            }\n        });\n    }, []);\n    // everytime tab is changed, resets certificate list and userinput. \n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setCertificatesArray(null);\n        setUserInput(\"\");\n    }, [\n        tab\n    ]);\n    // when certificates are listed, user input is reset.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setUserInput(\"\");\n    }, [\n        certificatesArray\n    ]);\n    /*\nHere the actual (one page) app is rendered.\n*/ return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_userContext__WEBPACK_IMPORTED_MODULE_2__.UserContext.Provider, {\n            value: {\n                tab,\n                setTab,\n                heightComponent,\n                ensName,\n                loading,\n                setLoading,\n                userInput,\n                setUserInput,\n                message,\n                setMessage,\n                walletAddress\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_navBar__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                    connectWallet: connectWallet,\n                    disconnectWallet: disconnectWallet\n                }, void 0, false, {\n                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                    lineNumber: 416,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Messages__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                    lineNumber: 420,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_FrontPage__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                    lineNumber: 421,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AboutPage__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                    lineNumber: 422,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_IssueCertificate__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                    certify: certify\n                }, void 0, false, {\n                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                    lineNumber: 423,\n                    columnNumber: 9\n                }, this),\n                tab == \"DocHash_Certs\" || tab == \"Issued_Certs\" || tab == \"Received_Certs\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_19__.Container, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_19__.Grid, {\n                        padded: true,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_19__.Grid.Column, {\n                                width: \"8\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CheckCertificates__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    handleSubmit: handleSubmit\n                                }, void 0, false, {\n                                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                                    lineNumber: 430,\n                                    columnNumber: 19\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                                lineNumber: 429,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_19__.Grid.Column, {\n                                width: \"8\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_19__.Card.Group, {\n                                    style: {\n                                        marginTop: \".1em\",\n                                        height: heightComponent,\n                                        overflowY: \"auto\"\n                                    },\n                                    children: certificatesArray ? certificatesArray.map((certificate)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_RenderCertificate__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                            certificate: certificate,\n                                            revokeCertificate: ()=>revokeCertificate(certificate.id)\n                                        }, certificate.id, false, {\n                                            fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                                            lineNumber: 443,\n                                            columnNumber: 44\n                                        }, this)) : [\n                                        null\n                                    ]\n                                }, void 0, false, {\n                                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                                    lineNumber: 435,\n                                    columnNumber: 23\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                                lineNumber: 432,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                        lineNumber: 428,\n                        columnNumber: 15\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n                    lineNumber: 427,\n                    columnNumber: 13\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n            lineNumber: 409,\n            columnNumber: 9\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/teijehidde/Documents/7CedarsGit/projects/certify-doc/my-app/pages/index.js\",\n        lineNumber: 408,\n        columnNumber: 7\n    }, this);\n} // References: \n // https://codesandbox.io/s/j43b10?file=/src/App.js:469-571 // \n // sandbox example: https://codesandbox.io/s/j43b10?file=/src/App.js (not with react though, needed to add useEffect)\n // main part is from web3dao learning course. -- the useContext tick is from youtube: https://www.youtube.com/watch?v=vYWMyOyrbYU\n // Also large chunck is from Alchemy's road2web3. \n // NB check LEarnweb3.io class on ENS names to refactor this page. Insert ENS names\n // https://learnweb3.io/courses/6394ea7c-0ad6-4a4a-879f-7f9756bc5976/lessons/23bacf56-3ceb-457a-a97d-419fe3b333d9 \n_s(Home, \"3nvFwPCp6MhRQ7t1RfM3JK+rRq0=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ })

});